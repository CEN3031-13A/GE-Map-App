{"schema_version":"1.0.0","elements":[{"description":"### Usage\n\n```\n<px-dashboard view-service-base-url=\"{{url}}\" selected-deck-id=\"{{id}}\" selected-deck-url=\"{{url}}\" context=\"{{context}}\"></px-dashboard>\n```","summary":"","path":"../px-card/px-dashboard.html","properties":[],"methods":[],"staticMethods":[],"demos":[],"metadata":{},"sourceRange":{"start":{"line":146,"column":10},"end":{"line":149,"column":3}},"privacy":"public","superclass":"HTMLElement","attributes":[],"events":[],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"px-dashboard"},{"description":"### Usage\n\n```\n<px-deck context=\"{{context}}\">\n  <vibration-card id=\"card2\"></vibration-card>\n  <temperature-card id=\"card3\"></temperature-card>\n</px-deck>\n\n```","summary":"","path":"../px-card/px-deck.html","properties":[],"methods":[],"staticMethods":[],"demos":[],"metadata":{},"sourceRange":{"start":{"line":174,"column":10},"end":{"line":177,"column":3}},"privacy":"public","superclass":"HTMLElement","attributes":[],"events":[],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"px-deck"},{"description":"### Usage\nCards can be used directly in a page or application as shown below.\nContent included in a block with class `actions` will be rendered\nin the top right corner of the card header.\n```\n<px-card header-text=\"Card\" icon=\"analysis\">\n  <div class='actions'>\n    <px-icon icon=\"pxm:new-window\"></px-icon>\n    <px-icon icon=\"pxs:help\"></px-icon>\n    <px-icon icon=\"pxs:app-settings\"></px-icon>\n  </div>\n  <p>This is the main content area of a Predix card.</p>\n</px-card>\n```\n\nAlternatively, you could create your own Polymer components that instantiate different styles of cards,\nand use them in combination with the Predix Views service and the px-deck / px-dashboard sub-components\nof this repo. **Be sure to use the dropdown at the top of this screen to view details about the px-card behavior,\nas well as the px-deck and px-dashboard subcomponents.**\n\n### Styling\nThe following custom properties are available for styling:\n\nCustom property | Description\n----------------|-------------\n`--px-card-background-color` | Background color of the card\n`--px-card-border-color` | Border color for the top of the card\n`--px-card-header-color` | Color of the header text\n`--px-card-icon-color` | Color of the card's main icon'\n`--px-card-action-icon-color` | Color of icons in actions slot\n`--px-card-action-icon-color--hover` | Color of icons in actions slot when hovered\n`--px-card-action-icon-color--pressed` | Color of icons in actions slot when pressed","summary":"","path":"../px-card/px-card.html","properties":[{"name":"headerText","type":"string","description":"Text to be displayed in the header of the card.","privacy":"public","sourceRange":{"start":{"line":245,"column":6},"end":{"line":247,"column":7}},"metadata":{"polymer":{}}},{"name":"icon","type":"string","description":"Icon that appears to the left of the card header text.\nShould be a valid icon name from the Predix icon set.","privacy":"public","sourceRange":{"start":{"line":252,"column":6},"end":{"line":254,"column":7}},"metadata":{"polymer":{}}},{"name":"fullBleed","type":"boolean","description":"When set to true, the contents of the card will stretch\nfrom edge-to-edge, with no padding on the sides. Should only\nbe used for displaying graphics like images or maps within a card.","privacy":"public","sourceRange":{"start":{"line":260,"column":6},"end":{"line":264,"column":7}},"metadata":{"polymer":{}},"defaultValue":"false"}],"methods":[],"staticMethods":[],"demos":[{"url":"demo.html","description":""}],"metadata":{},"sourceRange":{"start":{"line":239,"column":10},"end":{"line":266,"column":3}},"privacy":"public","superclass":"HTMLElement","attributes":[{"name":"header-text","description":"Text to be displayed in the header of the card.","sourceRange":{"start":{"line":245,"column":6},"end":{"line":247,"column":7}},"metadata":{},"type":"string"},{"name":"icon","description":"Icon that appears to the left of the card header text.\nShould be a valid icon name from the Predix icon set.","sourceRange":{"start":{"line":252,"column":6},"end":{"line":254,"column":7}},"metadata":{},"type":"string"},{"name":"full-bleed","description":"When set to true, the contents of the card will stretch\nfrom edge-to-edge, with no padding on the sides. Should only\nbe used for displaying graphics like images or maps within a card.","sourceRange":{"start":{"line":260,"column":6},"end":{"line":264,"column":7}},"metadata":{},"type":"boolean"}],"events":[],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"px-card"},{"description":"### Usage\n\nBy importing px-card.html and including the px.card behavior, you gain access to the\nadditional properties and methods listed in the API below for px-cards.\nYou can create your own Polymer components that instantiate different styles of cards,\nand use these in combination with the Predix Views service and px-deck / px-dashboard.\nFor more information on the Views service, see the documentation\n[here](https://docs.predix.io/en-US/content/service/app_services/views/views-service-overview).\n\n```\n<dom-module id=\"demo-card\">\n  <template>\n    <px-card icon='analysis' header-text='Demo Card'>\n      <h1>Hello World</h1>\n      <p>{{context.name}}</p>\n      <p>This is the bare minimum you need for a Predix Experience card.</p>\n    </px-card>\n  </template>\n</dom-module>\n<script>\n  Polymer({\n    is: 'demo-card',\n    init: function(){\n      // this is where you can do some initialization of your card\n      // you can safely use this.context or fetch data with this.getData method here\n    },\n    contextChanged: function(newContext, oldContext) {\n      // this is where you will receive updates to the context\n    },\n    deckStateChanged: function(newDeckState, oldDeckState) {\n      // this is where you will receive updates from other cards\n    },\n    updateDeck: function (object) {\n      // broadcast an object to other cards within the deck\n    },\n    behaviors: [px.card]\n  });\n\n</script>\n```\n\n### Getting Data\nYou can get data from web resources with a simple url. Example:\n\n```\nthis.getData('http://weather.com/sanramon').then(function(data) {\n  self.currentTemperature = data.value;\n}, function(reason) {\n  console.error('ERROR', reason);\n});\n```\n\nYou can also use getData with httpConfig. Example:\n```\nthis.getData('http://weather.com/sanramon',{headers: {'my-header-name': 'my-header-value'}}).then(function(data) {\n  self.currentTemperature = data.value;\n}, function(reason) {\n  console.error('ERROR', reason);\n});\n```\n\nIf you need more than http GET, you can call a lower level method, px.dealer.httpRequest in px.dealer.\nThe px.dealer.httpRequest method is a low level method that takes an httpConfig object and returns a promise.\nFor details about the httpConfigObject, please reference angular $http method config. Example:\n```\npx.dealer.httpRequest({\n  url: 'http://weather.com/sanramon,\n  method: 'JSONP',\n  headers: {'my-header-name': 'my-header-value'},\n}).then(function(data){\n  self.currentTemperature = data.value;\n});\n```","summary":"","path":"../px-card/px-sample-card.html","properties":[],"methods":[{"name":"init","description":"","privacy":"public","sourceRange":{"start":{"line":96,"column":4},"end":{"line":99,"column":5}},"metadata":{},"params":[]},{"name":"contextChanged","description":"","privacy":"public","sourceRange":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"metadata":{},"params":[{"name":"newContext"},{"name":"oldContext"}]},{"name":"deckStateChanged","description":"","privacy":"public","sourceRange":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"metadata":{},"params":[{"name":"newDeckState"},{"name":"oldDeckState"}]},{"name":"updateDeck","description":"","privacy":"public","sourceRange":{"start":{"line":106,"column":4},"end":{"line":108,"column":5}},"metadata":{},"params":[{"name":"object"}]}],"staticMethods":[],"demos":[],"metadata":{},"sourceRange":{"start":{"line":94,"column":10},"end":{"line":110,"column":3}},"privacy":"public","superclass":"HTMLElement","attributes":[],"events":[],"styling":{"cssVariables":[],"selectors":[]},"slots":[],"tagname":"px-sample-card"}]}